# Generated by Django 4.0.5 on 2022-10-12 08:31

import django.contrib.auth.models
from django.db import migrations, models
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='AgencyDataDetail',
            fields=[
                ('data_resource', models.CharField(max_length=255)),
                ('dataID', models.AutoField(primary_key=True, serialize=False)),
                ('access_level', models.CharField(max_length=10)),
                ('data_type', models.CharField(max_length=100)),
                ('dataname', models.CharField(max_length=255)),
                ('data_format', models.CharField(max_length=10)),
                ('objective', models.CharField(max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='DataSetGroup',
            fields=[
                ('groupID', models.AutoField(primary_key=True, serialize=False)),
                ('groupName', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Metadata',
            fields=[
                ('D_TypeID', models.CharField(max_length=3)),
                ('D_MetadataID', models.AutoField(primary_key=True, serialize=False)),
                ('D_DATE', models.DateField(auto_now_add=True)),
                ('D_TIME', models.TimeField(auto_now_add=True)),
                ('D_PROVINCE', models.IntegerField()),
                ('fileName', models.CharField(max_length=255)),
                ('file', models.FileField(upload_to='')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='MetadataGroup',
            fields=[
                ('typeID', models.AutoField(primary_key=True, serialize=False)),
                ('typeName', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Request',
            fields=[
                ('agency', models.CharField(max_length=255)),
                ('firstname', models.CharField(max_length=255)),
                ('lastname', models.CharField(max_length=255)),
                ('dataname', models.CharField(max_length=255)),
                ('email', models.CharField(max_length=255)),
                ('requestID', models.AutoField(primary_key=True, serialize=False)),
                ('objective', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='RequestDetail',
            fields=[
                ('dataName', models.CharField(max_length=255)),
                ('detail', models.CharField(max_length=255)),
                ('dataID', models.CharField(max_length=50)),
                ('detailID', models.AutoField(primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='RequestReturn',
            fields=[
                ('userID', models.CharField(max_length=50)),
                ('agency', models.CharField(max_length=255)),
                ('dataName', models.CharField(max_length=255)),
                ('dataID', models.CharField(max_length=50)),
                ('data_resource', models.CharField(max_length=255)),
                ('groupName', models.CharField(max_length=100)),
                ('id', models.AutoField(primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='AgencyRegister',
            fields=[
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('agency', models.CharField(max_length=255)),
                ('email', models.CharField(max_length=255, unique=True)),
                ('password', models.CharField(max_length=255)),
                ('userID', models.AutoField(primary_key=True, serialize=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
